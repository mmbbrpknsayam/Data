local Toggle5 = Tabs.Main:CreateToggle("MyToggle", {Title = "esp itam", Default = false})

local espVisuals = {}
local espConnections = {}
local selectedItem = {"BloxyCola", "Medkit"}
local espEnabled = false
local Toggle4Interacted = false

-- Clear all ESP
local function removeAllESP()
    for _, v in pairs(espVisuals) do
        if v and v.Parent then
            v:Destroy()
        end
    end
    espVisuals = {}

    for _, conn in pairs(espConnections) do
        if conn.Connected then
            conn:Disconnect()
        end
    end
    espConnections = {}

    local itemsFolder = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
    if itemsFolder then
        for _, model in pairs(itemsFolder:GetDescendants()) do
            if model:IsA("BillboardGui") or model:IsA("Highlight") then
                model:Destroy()
            end
        end
    end
end

-- Create ESP for a model
local function highlightModel(model)
    if not model:IsA("Model") then return end

    for _, item in ipairs(selectedItem) do
        if model.Name == item and not model:FindFirstChildOfClass("Highlight") then
            -- Ensure PrimaryPart exists
            if not model.PrimaryPart then
                local primary = model:FindFirstChildWhichIsA("BasePart")
                if primary then
                    model.PrimaryPart = primary
                else
                    return -- can't track if no part
                end
            end

            local highlight = Instance.new("Highlight")
            highlight.Parent = model
            highlight.Adornee = model
            highlight.FillColor = Color3.fromRGB(255, 255, 0)
            highlight.FillTransparency = 0.4
            highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
            highlight.OutlineTransparency = 0.5

            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Parent = model
            billboardGui.Adornee = model.PrimaryPart
            billboardGui.Size = UDim2.new(0, 200, 0, 30)
            billboardGui.StudsOffset = Vector3.new(0, 3, 0)
            billboardGui.AlwaysOnTop = true

            local textLabel = Instance.new("TextLabel")
            textLabel.Parent = billboardGui
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            textLabel.TextSize = 12
            textLabel.Text = string.format("%s (--)", model.Name)

            table.insert(espVisuals, highlight)
            table.insert(espVisuals, billboardGui)

            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

            local heartbeatConn = game:GetService("RunService").Heartbeat:Connect(function()
                if not espEnabled then return end
                if model.PrimaryPart then
                    local distance = (model.PrimaryPart.Position - humanoidRootPart.Position).Magnitude
                    textLabel.Text = string.format("%s (%d)", model.Name, math.floor(distance))
                end
            end)
            table.insert(espConnections, heartbeatConn)

            return
        end
    end
end

local function trackFolder(folder)
    for _, child in pairs(folder:GetChildren()) do
        highlightModel(child)
        if child:IsA("Folder") or child:IsA("Model") then
            trackFolder(child)
        end
    end

    local conn = folder.ChildAdded:Connect(function(newChild)
        highlightModel(newChild)
        if newChild:IsA("Folder") or newChild:IsA("Model") then
            trackFolder(newChild)
        end
    end)
    table.insert(espConnections, conn)
end

Toggle5:OnChanged(function()
    if not Toggle5Interacted then
        Toggle5Interacted = true
        return
    end

    espEnabled = not espEnabled

    local itemsFolder = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")

    if espEnabled then
        trackFolder(itemsFolder)
    else
        removeAllESP()
    end
end)




Tabs.Main:CreateButton({
    Title = "auto generators",
    Description = "",
    Callback = function()
        -- Auto Generator Repair (clean version)
        local repairing = false
        local currentGen = nil
        local repairThread = nil
        local genConnections = {}

        local function stopAutoRepair()
            if repairThread then
                pcall(task.cancel, repairThread)
                repairThread = nil
            end
            repairing = false
            currentGen = nil
        end

        local function startAutoRepair(generator)
            stopAutoRepair()
            if not generator or not generator.Parent then return end

            local progress = generator:FindFirstChild("Progress")
            local remotes = generator:FindFirstChild("Remotes")
            if not (progress and progress:IsA("NumberValue")) then return end
            if not remotes then return end

            local re = remotes:FindFirstChild("RE")
            if not (re and re:IsA("RemoteEvent")) then return end

            currentGen = generator
            repairing = true

            local progressConn
            progressConn = progress:GetPropertyChangedSignal("Value"):Connect(function()
                if progress.Value >= 100 then
                    progressConn:Disconnect()
                    stopAutoRepair()
                end
            end)
            table.insert(genConnections, progressConn)

            repairThread = task.spawn(function()
                while repairing and currentGen == generator do
                    if progress.Value >= 100 then
                        stopAutoRepair()
                        break
                    end
                    task.wait(3.5) -- wait 3s before firing
                    if repairing and progress.Value < 100 then
                        pcall(function()
                            re:FireServer()
                        end)
                    end
                end
            end)
        end

        local function setupGenerator(gen)
            if not gen or not gen:IsA("Model") then return end
            if genConnections[gen] then return end

            local prompt
            local main = gen:FindFirstChild("Main")
            if main then
                prompt = main:FindFirstChildWhichIsA("ProximityPrompt", true) or main:FindFirstChild("Prompt")
            end
            if not prompt then
                prompt = gen:FindFirstChildWhichIsA("ProximityPrompt", true)
            end

            if prompt then
                local conn = prompt.Triggered:Connect(function()
                    local progress = gen:FindFirstChild("Progress")
                    if progress and progress.Value < 100 then
                        startAutoRepair(gen)
                    end
                end)
                table.insert(genConnections, conn)
                genConnections[gen] = true
            end
        end

        local generatorFolder = workspace:WaitForChild("Map"):WaitForChild("Ingame"):WaitForChild("Map")
        for _, g in ipairs(generatorFolder:GetChildren()) do
            pcall(setupGenerator, g)
        end

        generatorFolder.ChildAdded:Connect(function(child)
            pcall(setupGenerator, child)
        end)
    end
})
